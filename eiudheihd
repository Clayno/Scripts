import string
import itertools

secret = "\x71\x11\x24\x59\x8d\x6d\x71\x11\x35\x16\x8c\x6d\x71\x0d\x39\x47\x1f\x36\xf1\x2f\x39\x36\x8e\x3c\x4b\x39\x35\x12\x87\x7c\xa3\x10\x74\x58\x16\xc7\x71\x56\x68\x51\x2c\x8c\x73\x45\x32\x5b\x8c\x2a\xf1\x2f\x3f\x57\x6e\x04\x3d\x16\x75\x67\x16\x4f\x6d\x1c\x6e\x40\x01\x36\x93\x59\x33\x56\x04\x3e\x7b\x3a\x70\x50\x16\x04\x3d\x18\x73\x37\xac\x24\xe1\x56\x62\x5b\x8c\x2a\xf1\x45\x7f\x86\x07\x3e\x63\x47";
def xor(x, y):
    return x^y

def puissance_inverse(y):
    z = 0;
    for i in range(8-y, 8):
        z += pow(2,i)
    return z
    
    
def bit_shift(x, y):
    y = y % 8;
    r = puissance_inverse(y); 
    return ((r) + (x << y)) & 0x00ff

def not_last_fun(var_secret, key):
    start = ""
    for i in range(0,len(var_secret)):
        c = ord(var_secret[i])
        if i != 0:
            t = ord(start[i - 1]) % 2
            if t == 0:
                cr = xor(c, ord(key[i % len(key)]))
            elif t == 1:
                cr = bit_shift(c, ord(key[i % len(key)]));
        else:
            cr = xor(c, ord(key[i % len(key)]));
        start += chr(cr);

    return start

def final_fun(inp):
    var = 0;
    for i in range(len(inp)):
        var += ord(inp[i])
    if var == 8932:
        return inp
    return None

dict =  ["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","!","\"","#","$","%","&","\\","(",")","*","+",",","-",".","/",":",";","<","=",">","?","@","[","\\","]","^","_","`","{","|","}","~"," "]

for s in itertools.product(dict,repeat=3):
    input = ''.join(s)
    result = final_fun(not_last_fun(secret, input))
    if result is not None:
        print("Input: {0}, Result: {1}".format(input, result))
